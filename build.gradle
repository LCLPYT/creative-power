plugins {
    id 'java'
    id 'maven-publish'
    id 'fabric-loom' version '1.2.5'
    id 'gradle-build-utils' version '1.2.1'
}

Properties props = loadProperties.call('publish.properties') as Properties

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = gitVersion.call()
group = project.maven_group

repositories {
    mavenCentral()

    maven {
        url "https://repo.lclpnet.work/repository/internal"
    }

    // ModMenu
    maven {
        url "https://maven.terraformersmc.com/releases/"
    }

    // cloth-config
    maven {
        url "https://maven.shedaniel.me/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

//    modImplementation "work.lclpnet.mods:mmocontent:${project.mmocontent_version}"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    /* other Java dependencies */
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'org.json:json:20220924'
    implementation "work.lclpnet:json-config4j:${project.json_config_version}"
    include "work.lclpnet:json-config4j:${project.json_config_version}"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
    useJUnitPlatform();
}

processResources {
    inputs.property "version", project.version
    inputs.property "loader_version", project.loader_version

    filesMatching("fabric.mod.json") {
        expand "version": project.version, "loader_version": project.loader_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.convention(17)
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present
    withSourcesJar()
}

jar {
    from("LICENSE.md") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name

            artifact remapJar
            artifact remapSourcesJar

            pom {
                name = 'Creative Power'
                description = 'Fabric Client mod for boosting a builders efficiency.'
            }
        }
    }

    repositories {
        maven {
            def env = System.getenv()
            if (Arrays.stream("DEPLOY_URL", "DEPLOY_USER", "DEPLOY_PASSWORD").allMatch(env.&containsKey)) {
                credentials {
                    username env.get("DEPLOY_USER")
                    password env.get("DEPLOY_PASSWORD")
                }
                url env.get("DEPLOY_URL")
            }
            else if (Arrays.stream("mavenHost", "mavenUser", "mavenPassword").allMatch(props.&containsKey)) {
                credentials {
                    username props.getProperty('mavenUser')
                    password props.getProperty('mavenPassword')
                }
                url props.getProperty('mavenHost')
            } else {
                url "file:///${project.projectDir}/repo"
            }
        }
    }
}